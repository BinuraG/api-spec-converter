{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger petstore",
    "description": "A sample API"
  },
  "paths": {
    "/pets/{petName}": {
      "parameters": [],
      "get": {
        "responses": {
          "400": {
            "description": "Returns the pet data",
            "schema": {
              "$ref": "#/definitions/pet"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "findPetByName",
        "summary": "",
        "description": "Returns a pet by name"
      },
      "delete": {
        "responses": {
          "400": {
            "description": "Returns the pet that was deleted",
            "schema": {
              "$ref": "#/definitions/pet"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deletePet",
        "summary": "",
        "description": "Deletes a single pet based on the name supplied"
      },
      "patch": {
        "responses": {
          "400": {
            "description": "Returns the updated pet data",
            "schema": {
              "$ref": "#/definitions/pet"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/pet"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "",
        "description": "Updates a pet by name"
      }
    },
    "/pets/{petName}/photos": {
      "parameters": [],
      "post": {
        "responses": {
          "400": {
            "description": "Returns the photo information",
            "schema": {
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The auto-generated photo ID"
                },
                "label": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "photo": {
                  "description": "Information about the photo (size, file name, etc.)"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "formData",
            "required": false,
            "description": "The photo ID (generated automatically)"
          },
          {
            "type": "string",
            "name": "label",
            "in": "formData",
            "required": false,
            "description": "A label for the photo"
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": false,
            "description": "An optional description of the photo"
          },
          {
            "type": "string",
            "name": "photo",
            "in": "formData",
            "required": true,
            "description": "The pet photo"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "addPetPhoto",
        "summary": "",
        "description": "Upload a new pet photo"
      }
    }
  },
  "definitions": {
    "pet": {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 4,
          "pattern": "^[a-zA-Z0-9- ]+$"
        },
        "age": {
          "type": "integer"
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "type": {
          "type": "string",
          "enum": [
            "cat",
            "dog",
            "bird"
          ]
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "vet": {
          "$ref": "#/definitions/veterinarian"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "veterinarian": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "address": {
          "$ref": "#/definitions/address"
        }
      }
    },
    "address": {
      "properties": {
        "street": {
          "type": "string",
          "minLength": 1
        },
        "city": {
          "type": "string",
          "minLength": 1
        },
        "state": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "^[A-Z]+$"
        },
        "zipcode": {
          "type": "integer",
          "minimum": 10000,
          "maximum": 99999
        }
      }
    }
  },
  "basePath": "/",
  "host": "localhost:3000",
  "schemes": [
    "http",
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ]
}
