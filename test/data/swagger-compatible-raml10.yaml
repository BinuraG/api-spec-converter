#%RAML 1.0
title: Swagger petstore
version: 1.0.0
baseUri: 'http://localhost:3000/'
mediaType: application/json
protocols:
  - HTTP
  - HTTPS
documentation:
  - title: Swagger petstore
    content: A sample API
/pets:
  displayName: pets
  description: ''
  '/{petName}':
    displayName: '{petName}'
    description: ''
    /photos:
      displayName: photos
      description: ''
      uriParameters: {}
      post:
        displayName: addPetPhoto
        description: Upload a new pet photo
        body:
          multipart/form-data:
            properties:
              id:
                description: The photo ID (generated automatically)
                type: string
                required: false
              label:
                description: A label for the photo
                type: string
                required: true
              description:
                description: An optional description of the photo
                type: string
                required: false
              photo:
                description: The pet photo
                type: string
                required: true
        headers: {}
        responses:
          '400':
            body:
              application/json:
                type: |-
                  {
                      "properties": {
                          "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The auto-generated photo ID"
                          },
                          "label": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "photo": {
                              "description": "Information about the photo (size, file name, etc.)"
                          }
                      }
                  }
                example: ''
            description: Returns the photo information
        queryParameters: {}
    uriParameters:
      petName:
        description: name for the pet
        type: string
        displayName: name for the pet
    patch:
      displayName: updatePet
      description: Updates a pet by name
      body:
        application/json:
          example: ''
          type: |-
            {
                "$ref": "#/definitions/pet"
            }
      headers: {}
      responses:
        '400':
          body:
            application/json:
              type: |-
                {
                    "$ref": "#/definitions/pet"
                }
              example: ''
          description: Returns the updated pet data
      queryParameters: {}
    delete:
      displayName: deletePet
      description: Deletes a single pet based on the name supplied
      headers: {}
      responses:
        '400':
          body:
            application/json:
              type: |-
                {
                    "$ref": "#/definitions/pet"
                }
              example: ''
          description: Returns the pet that was deleted
      queryParameters: {}
    get:
      displayName: findPetByName
      description: Returns a pet by name
      headers: {}
      responses:
        '400':
          body:
            application/json:
              type: |-
                {
                    "$ref": "#/definitions/pet"
                }
              example: ''
          description: Returns the pet data
      queryParameters: {}
types:
  pet:
    required:
      - name
      - type
    properties:
      name:
        type: string
        minLength: 4
        pattern: '^[a-zA-Z0-9- ]+$'
      age:
        type: integer
      dob:
        type: string
        format: date
      type:
        type: string
        enum:
          - cat
          - dog
          - bird
      address:
        type: address
      vet:
        type: veterinarian
      tags:
        type: array
        uniqueItems: true
        items:
          type: string
          minLength: 1
  veterinarian:
    required:
      - name
    properties:
      name:
        type: string
        minLength: 1
      address:
        type: address
  address:
    properties:
      street:
        type: string
        minLength: 1
      city:
        type: string
        minLength: 1
      state:
        type: string
        minLength: 2
        maxLength: 2
        pattern: '^[A-Z]+$'
      zipcode:
        type: integer
        minimum: 10000
        maximum: 99999
traits: []
