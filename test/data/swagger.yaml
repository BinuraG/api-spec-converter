---
swagger: "2.0"
info:
  version: "2016-01-18T09:03:22Z"
  title: "v3"
host: "jht09q1u3b.execute-api.eu-west-1.amazonaws.com"
basePath: "/prod"
schemes:
- "https"
paths:
  /account/domains:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AccountDomains"
        required: true
        schema:
          $ref: "#/definitions/AccountDomains"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AccountDomainsResponse"
          headers:
            Content-type:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"domains\"\
                \ : [\n#foreach($domain in $inputRoot.domains)\n {\n    \"objectId\"\
                \ : $domain.id,\n    \"domainName\" : \"$domain.name\",\n    \"abbreviation\"\
                \ : \"$domain.identifier\",\n    \"hostname\" : \"$domain.hostname\"\
                ,\n    \"language\" : \"$domain.language\",\n    \"logoImageUrl\"\
                \ : \"$domain.logo_image_url\",\n\t\"headerImageUrl\" : \"$domain.header_image_url\"\
                ,\n\t\"colorHighlightStart\" : \"$domain.color_highlight_start\",\n\
                \t\"colorHighlightEnd\" : \"$domain.color_highlight_end\",\n\t\"colorHighlightBorder\"\
                \ : \"$domain.color_highlight_border\",\n\t\"colorLink\" : \"$domain.color_link\"\
                ,\n\t\"colorLinkHover\" : \"$domain.color_link_hover\",\n\t\"colorLinkActive\"\
                \ : \"$domain.color_link_active\",\n\t\"colorLinkVisited\" : \"$domain.color_link_visited\"\
                ,\n\t\"colorTextHeadline\" : \"$domain.color_text_headline\",\n\t\"\
                colorTextBody\" : \"$domain.color_text_body\",\n\t\"colorTextAside\"\
                \ : \"$domain.color_text_aside\",\n\t\"colorLine\" : \"$domain.color_line\"\
                ,\n\t\"colorLineAside\" : \"$domain.color_line_aside\",\n    \"createTime\"\
                \ : $domain.create_time,\n    \"updateTime\" : $domain.update_time\n\
                \  } \n#if($foreach.hasNext),#end\n#end\n]\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/account/domains"
        httpMethod: "POST"
        type: "http"
  /account/login:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AccountLogin"
        required: true
        schema:
          $ref: "#/definitions/AccountLogin"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AccountLoginResponse"
          headers:
            Content-type:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"token\"\
                \ : \"$inputRoot.token\",\n  \"objectId\" : $inputRoot.id,\n  \"username\"\
                \ : \"$inputRoot.name\",\n  \"userType\" : \"$inputRoot.type\",\n\
                \  \"roles\" : [\n#foreach($role in $inputRoot.roles)\n \"$role\"\
                \ \n#if($foreach.hasNext),#end\n#end\n],\n  \"properties\": {\n  \"\
                companies\" : [\n#foreach($company in $inputRoot.companies)\n {\n\
                \    \"objectId\" : $company.id,\n    \"domains\" : [\n#foreach($domain\
                \ in $company.domains)\n {\n      \"objectId\" : $domain.id,\n   \
                \   \"domainName\" : \"$domain.name\",\n      \"abbreviation\" : \"\
                $domain.identifier\",\n      \"hostname\" : \"$domain.hostname\",\n\
                \      \"language\" : \"$domain.language\",\n      \"logoImageUrl\"\
                \ : \"$domain.logo_image_url\",\n      \"headerImageUrl\" : \"$domain.header_image_url\"\
                ,\n      \"colorHighlightStart\" : \"$domain.color_highlight_start\"\
                ,\n      \"colorHighlightEnd\" : \"$domain.color_highlight_end\",\n\
                \      \"colorHighlightBorder\" : \"$domain.color_highlight_border\"\
                ,\n      \"colorLink\" : \"$domain.color_link\",\n      \"colorLinkHover\"\
                \ : \"$domain.color_link_hover\",\n      \"colorLinkActive\" : \"\
                $domain.color_link_active\",\n      \"colorLinkVisited\" : \"$domain.color_link_visited\"\
                ,\n      \"colorTextHeadline\" : \"$domain.color_text_headline\",\n\
                \      \"colorTextBody\" : \"$domain.color_text_body\",\n      \"\
                colorTextAside\" : \"$domain.color_text_aside\",\n      \"colorLine\"\
                \ : \"$domain.color_line\",\n      \"colorLineAside\" : \"$domain.color_line_aside\"\
                ,\n      \"createTime\" : $domain.create_time,\n      \"updateTime\"\
                \ : $domain.update_time\n    } \n#if($foreach.hasNext),#end\n#end\n\
                ],\n    \"premiumProfile\" : $company.premium_profile,\n    \"parentCompanyId\"\
                \ : #if($company.parent_company_id != \"\")$company.parent_company_id#{else}null#end,\n\
                \    \"companyName\" : \"$company.name\",\n    \"logoFile\" : \n#if($company.logo_file)\
                \    \n    {\n      \"objectId\" : $company.logo_file.id,\n      \"\
                imageUrl\" : \"$company.logo_file.original_image_url\",\n      \"\
                thumbUrl\" : \"$company.logo_file.thumb_url\",\n      \"width\" :\
                \ $company.logo_file.width,\n      \"height\" : $company.logo_file.height,\n\
                \      \"cropLeft\" : #if($company.logo_file.crop_left != \"\")$company.logo_file.crop_left#{else}null#end,\n\
                \      \"cropTop\" : #if($company.logo_file.crop_top != \"\")$company.logo_file.crop_top#{else}null#end,\n\
                \      \"cropRight\" : #if($company.logo_file.crop_right != \"\")$company.logo_file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($company.logo_file.crop_bottom != \"\"\
                )$company.logo_file.crop_bottom#{else}null#end,\n      \"contentType\"\
                \ : \"$company.logo_file.image_content_type\",\n      \"createTime\"\
                \ : $company.logo_file.create_time,\n      \"updateTime\" : $company.logo_file.update_time\n\
                \    }\n#else\nnull\n#end,\n    \"public\" : $company.public,\n  \
                \  \"viewCount\" : $company.view_count,\n    \"createTime\" : $company.create_time,\n\
                \    \"updateTime\" : $company.update_time\n  } \n#if($foreach.hasNext),#end\n\
                #end\n]\n}\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"username\"\
            \ : \"$inputRoot.username\",\n  \"password\" : \"$inputRoot.password\"\
            ,\n  \"domain_id\" : $inputRoot.domainId,\n  \"device_name\" : \"$inputRoot.deviceName\"\
            \n}"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/account/login"
        httpMethod: "POST"
        type: "http"
  /employer/company:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompaniesResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"companies\"\
                \ : [\n#foreach($company in $inputRoot.companies)\n {\n    \"objectId\"\
                \ : $company.id,\n    \"domains\" : [\n#foreach($domain in $company.domains)\n\
                \ {\n      \"objectId\" : $domain.id,\n      \"domainName\" : \"$domain.name\"\
                ,\n      \"abbreviation\" : \"$domain.identifier\",\n      \"hostname\"\
                \ : \"$domain.hostname\",\n      \"language\" : \"$domain.language\"\
                ,\n      \"logoImageUrl\" : \"$domain.logo_image_url\",\n      \"\
                headerImageUrl\" : \"$domain.header_image_url\",\n      \"colorHighlightStart\"\
                \ : \"$domain.color_highlight_start\",\n      \"colorHighlightEnd\"\
                \ : \"$domain.color_highlight_end\",\n      \"colorHighlightBorder\"\
                \ : \"$domain.color_highlight_border\",\n      \"colorLink\" : \"\
                $domain.color_link\",\n      \"colorLinkHover\" : \"$domain.color_link_hover\"\
                ,\n      \"colorLinkActive\" : \"$domain.color_link_active\",\n  \
                \    \"colorLinkVisited\" : \"$domain.color_link_visited\",\n    \
                \  \"colorTextHeadline\" : \"$domain.color_text_headline\",\n    \
                \  \"colorTextBody\" : \"$domain.color_text_body\",\n      \"colorTextAside\"\
                \ : \"$domain.color_text_aside\",\n      \"colorLine\" : \"$domain.color_line\"\
                ,\n      \"colorLineAside\" : \"$domain.color_line_aside\",\n    \
                \  \"createTime\" : $domain.create_time,\n      \"updateTime\" : $domain.update_time\n\
                \    } \n#if($foreach.hasNext),#end\n#end\n],\n    \"parentCompanyId\"\
                \ : $company.parent_company_id,\n    \"companyName\" : \"$company.name\"\
                ,\n    \"logoFile\" : \n#if($company.logo_file)    \n    {\n     \
                \ \"objectId\" : $company.logo_file.id,\n      \"imageUrl\" : \"$company.logo_file.original_image_url\"\
                ,\n      \"thumbUrl\" : \"$company.logo_file.thumb_url\",\n      \"\
                width\" : $company.logo_file.width,\n      \"height\" : $company.logo_file.height,\n\
                \      \"cropLeft\" : #if($company.logo_file.crop_left != \"\")$company.logo_file.crop_left#{else}null#end,\n\
                \      \"cropTop\" : #if($company.logo_file.crop_top != \"\")$company.logo_file.crop_top#{else}null#end,\n\
                \      \"cropRight\" : #if($company.logo_file.crop_right != \"\")$company.logo_file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($company.logo_file.crop_bottom != \"\"\
                )$company.logo_file.crop_bottom#{else}null#end,\n      \"contentType\"\
                \ : \"$company.logo_file.image_content_type\",\n      \"createTime\"\
                \ : $company.logo_file.create_time,\n      \"updateTime\" : $company.logo_file.update_time\n\
                \    }\n#else\nnull\n#end,\n    \"public\" : $company.public,\n  \
                \  \"viewCount\" : $company.view_count,\n    \"createTime\" : $company.create_time,\n\
                \    \"updateTime\" : $company.update_time\n  } \n#if($foreach.hasNext),#end\n\
                #end\n]\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/default/index"
        httpMethod: "GET"
        requestParameters:
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
  /employer/company/{company_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n#set($company\
                \ = $inputRoot.company)\n{\n  \"company\" : {\n    \"objectId\" :\
                \ $company.id,\n    \"domains\" : [\n#foreach($domain in $company.domains)\n\
                \ {\n      \"objectId\" : $domain.id,\n      \"domainName\" : \"$domain.name\"\
                ,\n      \"abbreviation\" : \"$domain.identifier\",\n      \"hostname\"\
                \ : \"$domain.hostname\",\n      \"language\" : \"$domain.language\"\
                ,\n      \"logoImageUrl\" : \"$domain.logo_image_url\",\n      \"\
                headerImageUrl\" : \"$domain.header_image_url\",\n      \"colorHighlightStart\"\
                \ : \"$domain.color_highlight_start\",\n      \"colorHighlightEnd\"\
                \ : \"$domain.color_highlight_end\",\n      \"colorHighlightBorder\"\
                \ : \"$domain.color_highlight_border\",\n      \"colorLink\" : \"\
                $domain.color_link\",\n      \"colorLinkHover\" : \"$domain.color_link_hover\"\
                ,\n      \"colorLinkActive\" : \"$domain.color_link_active\",\n  \
                \    \"colorLinkVisited\" : \"$domain.color_link_visited\",\n    \
                \  \"colorTextHeadline\" : \"$domain.color_text_headline\",\n    \
                \  \"colorTextBody\" : \"$domain.color_text_body\",\n      \"colorTextAside\"\
                \ : \"$domain.color_text_aside\",\n      \"colorLine\" : \"$domain.color_line\"\
                ,\n      \"colorLineAside\" : \"$domain.color_line_aside\",\n    \
                \  \"createTime\" : $domain.create_time,\n      \"updateTime\" : $domain.update_time\n\
                \    } \n#if($foreach.hasNext),#end\n#end\n],\n    \"parentCompanyId\"\
                \ : $company.parent_company_id,\n    \"companyName\" : \"$company.name\"\
                ,\n    \"logoFile\" : \n#if($company.logo_file)    \n    {\n     \
                \ \"objectId\" : $company.logo_file.id,\n      \"imageUrl\" : \"$company.logo_file.original_image_url\"\
                ,\n      \"thumbUrl\" : \"$company.logo_file.thumb_url\",\n      \"\
                width\" : $company.logo_file.width,\n      \"height\" : $company.logo_file.height,\n\
                \      \"cropLeft\" : #if($company.logo_file.crop_left != \"\")$company.logo_file.crop_left#{else}null#end,\n\
                \      \"cropTop\" : #if($company.logo_file.crop_top != \"\")$company.logo_file.crop_top#{else}null#end,\n\
                \      \"cropRight\" : #if($company.logo_file.crop_right != \"\")$company.logo_file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($company.logo_file.crop_bottom != \"\"\
                )$company.logo_file.crop_bottom#{else}null#end,\n      \"contentType\"\
                \ : \"$company.logo_file.image_content_type\",\n      \"createTime\"\
                \ : $company.logo_file.create_time,\n      \"updateTime\" : $company.logo_file.update_time\n\
                \    }\n#else\nnull\n#end,\n    \"public\" : $company.public,\n  \
                \  \"viewCount\" : $company.view_count,\n    \"createTime\" : $company.create_time,\n\
                \    \"updateTime\" : $company.update_time\n  }\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/default/view"
        httpMethod: "GET"
        requestParameters:
          integration.request.querystring.id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
  /employer/company/{company_id}/profile/header:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyPremiumProfileHeaderResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"file\"\
                \ : \n#if($inputRoot.file)\n  {\n    \"objectId\" : $inputRoot.file.id,\n\
                \    \"imageUrl\" : \"$inputRoot.file.original_image_url\",\n    \"\
                thumbUrl\" : \"$inputRoot.file.thumb_url\",\n    \"width\" : $inputRoot.file.width,\n\
                \    \"height\" : $inputRoot.file.height,\n    \"cropLeft\" : #if($inputRoot.file.crop_left\
                \ != \"\")$inputRoot.file.crop_left#{else}null#end,\n    \"cropTop\"\
                \ : #if($inputRoot.file.crop_top != \"\")$inputRoot.file.crop_top#{else}null#end,\n\
                \    \"cropRight\" : #if($inputRoot.file.crop_right != \"\")$inputRoot.file.crop_right#{else}null#end,\n\
                \    \"cropBottom\" : #if($inputRoot.file.crop_bottom != \"\")$inputRoot.file.crop_bottom#{else}null#end,\n\
                \    \"contentType\" : \"$inputRoot.file.image_content_type\",\n \
                \   \"createTime\" : $inputRoot.file.create_time,\n    \"updateTime\"\
                \ : $inputRoot.file.update_time\n  }\n#else\nnull\n#end  \n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/header/index"
        httpMethod: "GET"
        requestParameters:
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
    post:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyPremiumProfileHeaderResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"file\"\
                \ : \n#if($inputRoot.file)\n  {\n    \"objectId\" : $inputRoot.file.id,\n\
                \    \"imageUrl\" : \"$inputRoot.file.original_image_url\",\n    \"\
                thumbUrl\" : \"$inputRoot.file.thumb_url\",\n    \"width\" : $inputRoot.file.width,\n\
                \    \"height\" : $inputRoot.file.height,\n    \"cropLeft\" : #if($inputRoot.file.crop_left\
                \ != \"\")$inputRoot.file.crop_left#{else}null#end,\n    \"cropTop\"\
                \ : #if($inputRoot.file.crop_top != \"\")$inputRoot.file.crop_top#{else}null#end,\n\
                \    \"cropRight\" : #if($inputRoot.file.crop_right != \"\")$inputRoot.file.crop_right#{else}null#end,\n\
                \    \"cropBottom\" : #if($inputRoot.file.crop_bottom != \"\")$inputRoot.file.crop_bottom#{else}null#end,\n\
                \    \"contentType\" : \"$inputRoot.file.image_content_type\",\n \
                \   \"createTime\" : $inputRoot.file.create_time,\n    \"updateTime\"\
                \ : $inputRoot.file.update_time\n  }\n#else\nnull\n#end  \n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        requestTemplates:
          application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/header/create"
        httpMethod: "POST"
        requestParameters:
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/header/delete"
        httpMethod: "DELETE"
        requestParameters:
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
  /employer/company/{company_id}/profile/pictures:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyPremiumProfilePicturesResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"pictures\"\
                \ : [\n#foreach($picture in $inputRoot.pictures)\n {\n    \"objectId\"\
                \ : $picture.id,\n    \"title\" : \"$picture.title\",\n    \"descriptionText\"\
                \ : \"$picture.description_text\",\n    \"sort\" : $picture.sort,\n\
                \    \"file\" : {\n      \"objectId\" : $picture.file.id,\n      \"\
                imageUrl\" : \"$picture.file.original_image_url\",\n      \"thumbUrl\"\
                \ : \"$picture.file.thumb_url\",\n      \"width\" : $picture.file.width,\n\
                \      \"height\" : $picture.file.height,\n      \"cropLeft\" : #if($picture.file.crop_left\
                \ != \"\")$picture.file.crop_left#{else}null#end,\n      \"cropTop\"\
                \ : #if($picture.file.crop_top != \"\")$picture.file.crop_top#{else}null#end,\n\
                \      \"cropRight\" : #if($picture.file.crop_right != \"\")$picture.file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($picture.file.crop_bottom != \"\")$picture.file.crop_bottom#{else}null#end,\n\
                \      \"contentType\" : \"$picture.file.image_content_type\",\n \
                \     \"createTime\" : $picture.file.create_time,\n      \"updateTime\"\
                \ : $picture.file.update_time\n    },\n    \"createTime\" : $picture.create_time,\n\
                \    \"updateTime\" : $picture.update_time\n  } \n#if($foreach.hasNext),#end\n\
                #end\n]\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/pictures/index"
        httpMethod: "GET"
        requestParameters:
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
    post:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyPremiumProfilePictureResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"picture\"\
                \ : {\n    \"objectId\" : $inputRoot.picture.id,\n    \"title\" :\
                \ \"$inputRoot.picture.title\",\n    \"descriptionText\" : \"$inputRoot.picture.description_text\"\
                ,\n    \"sort\" : $inputRoot.picture.sort,\n    \"file\" : {\n   \
                \   \"objectId\" : $inputRoot.picture.file.id,\n      \"imageUrl\"\
                \ : \"$inputRoot.picture.file.original_image_url\",\n      \"thumbUrl\"\
                \ : \"$inputRoot.picture.file.thumb_url\",\n      \"width\" : $inputRoot.picture.file.width,\n\
                \      \"height\" : $inputRoot.picture.file.height,\n      \"cropLeft\"\
                \ : #if($inputRoot.picture.file.crop_left)$inputRoot.picture.file.crop_left#{else}null#end,\n\
                \      \"cropTop\" : #if($inputRoot.picture.file.crop_top)$inputRoot.picture.file.crop_top#{else}null#end,\n\
                \      \"cropRight\" : #if($inputRoot.picture.file.crop_right)$inputRoot.picture.file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($inputRoot.picture.file.crop_bottom)$inputRoot.picture.file.crop_bottom#{else}null#end,\n\
                \      \"contentType\" : \"$inputRoot.picture.file.image_content_type\"\
                ,\n      \"createTime\" : $inputRoot.picture.file.create_time,\n \
                \     \"updateTime\" : $inputRoot.picture.file.update_time\n    },\n\
                \    \"createTime\" : $inputRoot.picture.create_time,\n    \"updateTime\"\
                \ : $inputRoot.picture.update_time\n  }\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/pictures/create"
        httpMethod: "POST"
        requestParameters:
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
    put:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/pictures/sort"
        httpMethod: "PUT"
        requestParameters:
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
  /employer/company/{company_id}/profile/pictures/{picture_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      - name: "picture_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyPremiumProfilePictureResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"picture\"\
                \ : {\n    \"objectId\" : $inputRoot.picture.id,\n    \"title\" :\
                \ \"$inputRoot.picture.title\",\n    \"descriptionText\" : \"$inputRoot.picture.description_text\"\
                ,\n    \"sort\" : $inputRoot.picture.sort,\n    \"file\" : {\n   \
                \   \"objectId\" : $inputRoot.picture.file.id,\n      \"imageUrl\"\
                \ : \"$inputRoot.picture.file.original_image_url\",\n      \"thumbUrl\"\
                \ : \"$inputRoot.picture.file.thumb_url\",\n      \"width\" : $inputRoot.picture.file.width,\n\
                \      \"height\" : $inputRoot.picture.file.height,\n      \"cropLeft\"\
                \ : #if($inputRoot.picture.file.crop_left != \"\")$inputRoot.picture.file.crop_left#{else}null#end,\n\
                \      \"cropTop\" : #if($inputRoot.picture.file.crop_top != \"\"\
                )$inputRoot.picture.file.crop_top#{else}null#end,\n      \"cropRight\"\
                \ : #if($inputRoot.picture.file.crop_right != \"\")$inputRoot.picture.file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($inputRoot.picture.file.crop_bottom !=\
                \ \"\")$inputRoot.picture.file.crop_bottom#{else}null#end,\n     \
                \ \"contentType\" : \"$inputRoot.picture.file.image_content_type\"\
                ,\n      \"createTime\" : $inputRoot.picture.file.create_time,\n \
                \     \"updateTime\" : $inputRoot.picture.file.update_time\n    },\n\
                \    \"createTime\" : $inputRoot.picture.create_time,\n    \"updateTime\"\
                \ : $inputRoot.picture.update_time\n  }\n}"
          5\d{2}:
            statusCode: "500"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/pictures/view"
        httpMethod: "GET"
        requestParameters:
          integration.request.querystring.id: "method.request.path.picture_id"
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
    post:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      - name: "picture_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EmployerCompanyPremiumProfilePictureResponse"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"picture\"\
                \ : {\n    \"objectId\" : $inputRoot.picture.id,\n    \"title\" :\
                \ \"$inputRoot.picture.title\",\n    \"descriptionText\" : \"$inputRoot.picture.description_text\"\
                ,\n    \"sort\" : $inputRoot.picture.sort,\n    \"file\" : {\n   \
                \   \"objectId\" : $inputRoot.picture.file.id,\n      \"imageUrl\"\
                \ : \"$inputRoot.picture.file.original_image_url\",\n      \"thumbUrl\"\
                \ : \"$inputRoot.picture.file.thumb_url\",\n      \"width\" : $inputRoot.picture.file.width,\n\
                \      \"height\" : $inputRoot.picture.file.height,\n      \"cropLeft\"\
                \ : #if($inputRoot.picture.file.crop_left != \"\")$inputRoot.picture.file.crop_left#{else}null#end,\n\
                \      \"cropTop\" : #if($inputRoot.picture.file.crop_top != \"\"\
                )$inputRoot.picture.file.crop_top#{else}null#end,\n      \"cropRight\"\
                \ : #if($inputRoot.picture.file.crop_right != \"\")$inputRoot.picture.file.crop_right#{else}null#end,\n\
                \      \"cropBottom\" : #if($inputRoot.picture.file.crop_bottom !=\
                \ \"\")$inputRoot.picture.file.crop_bottom#{else}null#end,\n     \
                \ \"contentType\" : \"$inputRoot.picture.file.image_content_type\"\
                ,\n      \"createTime\" : $inputRoot.picture.file.create_time,\n \
                \     \"updateTime\" : $inputRoot.picture.file.update_time\n    },\n\
                \    \"createTime\" : $inputRoot.picture.create_time,\n    \"updateTime\"\
                \ : $inputRoot.picture.update_time\n  }\n}"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/pictures/update"
        httpMethod: "POST"
        requestParameters:
          integration.request.querystring.id: "method.request.path.picture_id"
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
      - name: "auth-token"
        in: "header"
        required: false
        type: "string"
      - name: "picture_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseTemplates:
              application/json: "__passthrough__"
          200:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
          5\d{2}:
            statusCode: "500"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/employer/company/profile/pictures/delete"
        httpMethod: "DELETE"
        requestParameters:
          integration.request.querystring.id: "method.request.path.picture_id"
          integration.request.querystring.company_id: "method.request.path.company_id"
          integration.request.header.auth-token: "method.request.header.auth-token"
        type: "http"
  /ping:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers: {}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "__passthrough__"
        uri: "https://${stageVariables.hostname}/api/${stageVariables.version}/ping"
        httpMethod: "GET"
        type: "http"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Empty:
    type: "object"
  EmployerCompanyResponse:
    type: "object"
    properties:
      company:
        type: "object"
        properties:
          parentCompanyId:
            type: "integer"
            minimum: 0.0
          logoFile:
            type: "object"
            properties:
              cropLeft:
                type: "integer"
              cropTop:
                type: "integer"
              cropBottom:
                type: "integer"
              createTime:
                type: "integer"
              imageUrl:
                type: "string"
              width:
                type: "integer"
                minimum: 0.0
              cropRight:
                type: "integer"
              updateTime:
                type: "integer"
              thumbUrl:
                type: "string"
              contentType:
                type: "string"
              objectId:
                type: "integer"
                minimum: 0.0
              height:
                type: "integer"
                minimum: 0.0
          public:
            type: "boolean"
          createTime:
            type: "integer"
          premiumProfile:
            type: "array"
            items:
              type: "integer"
          companyName:
            type: "string"
          domains:
            type: "array"
            items:
              type: "object"
              properties:
                headerImageUrl:
                  type: "string"
                colorLinkHover:
                  type: "string"
                colorLineAside:
                  type: "string"
                language:
                  type: "string"
                updateTime:
                  type: "integer"
                colorHighlightEnd:
                  type: "string"
                abbreviation:
                  type: "string"
                colorHighlightBorder:
                  type: "string"
                colorTextBody:
                  type: "string"
                logoImageUrl:
                  type: "string"
                colorLinkVisited:
                  type: "string"
                hostname: null
                colorLink:
                  type: "string"
                createTime:
                  type: "integer"
                domainName:
                  type: "string"
                colorTextHeadline:
                  type: "string"
                colorLine:
                  type: "string"
                colorHighlightStart:
                  type: "string"
                colorLinkActive:
                  type: "string"
                objectId:
                  type: "integer"
                  minimum: 0.0
                colorTextAside:
                  type: "string"
          updateTime:
            type: "integer"
          viewCount:
            type: "integer"
            minimum: 0.0
          objectId:
            type: "integer"
            minimum: 0.0
  EmployerCompaniesResponse:
    type: "object"
    properties:
      companies:
        type: "array"
        items:
          type: "object"
          properties:
            parentCompanyId:
              type: "integer"
              minimum: 0.0
            logoFile:
              type: "object"
              properties:
                cropLeft:
                  type: "integer"
                cropTop:
                  type: "integer"
                cropBottom:
                  type: "integer"
                createTime:
                  type: "integer"
                imageUrl:
                  type: "string"
                width:
                  type: "integer"
                  minimum: 0.0
                cropRight:
                  type: "integer"
                updateTime:
                  type: "integer"
                thumbUrl:
                  type: "string"
                contentType:
                  type: "string"
                objectId:
                  type: "integer"
                  minimum: 0.0
                height:
                  type: "integer"
                  minimum: 0.0
            public:
              type: "boolean"
            createTime:
              type: "integer"
            premiumProfile:
              type: "array"
              items:
                type: "integer"
            companyName:
              type: "string"
            domains:
              type: "array"
              items:
                type: "object"
                properties:
                  headerImageUrl:
                    type: "string"
                  colorLinkHover:
                    type: "string"
                  colorLineAside:
                    type: "string"
                  language:
                    type: "string"
                  updateTime:
                    type: "integer"
                  colorHighlightEnd:
                    type: "string"
                  abbreviation:
                    type: "string"
                  colorHighlightBorder:
                    type: "string"
                  colorTextBody:
                    type: "string"
                  logoImageUrl:
                    type: "string"
                  colorLinkVisited:
                    type: "string"
                  hostname: null
                  colorLink:
                    type: "string"
                  createTime:
                    type: "integer"
                  domainName:
                    type: "string"
                  colorTextHeadline:
                    type: "string"
                  colorLine:
                    type: "string"
                  colorHighlightStart:
                    type: "string"
                  colorLinkActive:
                    type: "string"
                  objectId:
                    type: "integer"
                    minimum: 0.0
                  colorTextAside:
                    type: "string"
            updateTime:
              type: "integer"
            viewCount:
              type: "integer"
              minimum: 0.0
            objectId:
              type: "integer"
              minimum: 0.0
  AccountLogin:
    type: "object"
    required:
    - "domainId"
    - "password"
    - "username"
    properties:
      username:
        type: "string"
        format: "email"
      password:
        type: "string"
      domainId:
        type: "integer"
      deviceName:
        type: "string"
  EmployerCompanyPremiumProfilePictureResponse:
    type: "object"
    properties:
      picture:
        type: "object"
        properties:
          file:
            type: "object"
            properties:
              cropLeft:
                type: "integer"
              cropTop:
                type: "integer"
              cropBottom:
                type: "integer"
              createTime:
                type: "integer"
              imageUrl:
                type: "string"
              width:
                type: "integer"
                minimum: 0.0
              cropRight:
                type: "integer"
              updateTime:
                type: "integer"
              thumbUrl:
                type: "string"
              contentType:
                type: "string"
              objectId:
                type: "integer"
                minimum: 0.0
              height:
                type: "integer"
                minimum: 0.0
          createTime:
            type: "integer"
          updateTime:
            type: "integer"
          descriptionText:
            type: "string"
          sort:
            type: "integer"
            minimum: 0.0
          title:
            type: "string"
          objectId:
            type: "integer"
            minimum: 0.0
  AccountDomainsResponse:
    type: "object"
    properties:
      domains:
        type: "array"
        items:
          type: "object"
          properties:
            headerImageUrl:
              type: "string"
            colorLinkHover:
              type: "string"
            colorLineAside:
              type: "string"
            language:
              type: "string"
            updateTime:
              type: "integer"
            colorHighlightEnd:
              type: "string"
            abbreviation:
              type: "string"
            colorHighlightBorder:
              type: "string"
            colorTextBody:
              type: "string"
            logoImageUrl:
              type: "string"
            colorLinkVisited:
              type: "string"
            hostname: null
            colorLink:
              type: "string"
            createTime:
              type: "integer"
            domainName:
              type: "string"
            colorTextHeadline:
              type: "string"
            colorLine:
              type: "string"
            colorHighlightStart:
              type: "string"
            colorLinkActive:
              type: "string"
            objectId:
              type: "integer"
              minimum: 0.0
            colorTextAside:
              type: "string"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      fields:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
  AccountLoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
      objectId:
        type: "integer"
      username:
        type: "string"
      userType:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
      companies:
        type: "array"
        items:
          type: "object"
          properties:
            parentCompanyId:
              type: "integer"
              minimum: 0.0
            logoFile:
              type: "object"
              properties:
                cropLeft:
                  type: "integer"
                cropTop:
                  type: "integer"
                cropBottom:
                  type: "integer"
                createTime:
                  type: "integer"
                imageUrl:
                  type: "string"
                width:
                  type: "integer"
                  minimum: 0.0
                cropRight:
                  type: "integer"
                updateTime:
                  type: "integer"
                thumbUrl:
                  type: "string"
                contentType:
                  type: "string"
                objectId:
                  type: "integer"
                  minimum: 0.0
                height:
                  type: "integer"
                  minimum: 0.0
            public:
              type: "boolean"
            createTime:
              type: "integer"
            premiumProfile:
              type: "array"
              items:
                type: "integer"
            companyName:
              type: "string"
            domains:
              type: "array"
              items:
                type: "object"
                properties:
                  headerImageUrl:
                    type: "string"
                  colorLinkHover:
                    type: "string"
                  colorLineAside:
                    type: "string"
                  language:
                    type: "string"
                  updateTime:
                    type: "integer"
                  colorHighlightEnd:
                    type: "string"
                  abbreviation:
                    type: "string"
                  colorHighlightBorder:
                    type: "string"
                  colorTextBody:
                    type: "string"
                  logoImageUrl:
                    type: "string"
                  colorLinkVisited:
                    type: "string"
                  hostname: null
                  colorLink:
                    type: "string"
                  createTime:
                    type: "integer"
                  domainName:
                    type: "string"
                  colorTextHeadline:
                    type: "string"
                  colorLine:
                    type: "string"
                  colorHighlightStart:
                    type: "string"
                  colorLinkActive:
                    type: "string"
                  objectId:
                    type: "integer"
                    minimum: 0.0
                  colorTextAside:
                    type: "string"
            updateTime:
              type: "integer"
            viewCount:
              type: "integer"
              minimum: 0.0
            objectId:
              type: "integer"
              minimum: 0.0
  AccountDomains:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
        format: "email"
      password:
        type: "string"
  EmployerCompanyPremiumProfileHeaderResponse:
    type: "object"
    properties:
      file:
        type: "object"
        properties:
          cropLeft:
            type: "integer"
          cropTop:
            type: "integer"
          cropBottom:
            type: "integer"
          createTime:
            type: "integer"
          imageUrl:
            type: "string"
          width:
            type: "integer"
            minimum: 0.0
          cropRight:
            type: "integer"
          updateTime:
            type: "integer"
          thumbUrl:
            type: "string"
          contentType:
            type: "string"
          objectId:
            type: "integer"
            minimum: 0.0
          height:
            type: "integer"
            minimum: 0.0
  EmployerCompanyPremiumProfilePicturesResponse:
    type: "object"
    properties:
      pictures:
        type: "array"
        items:
          type: "object"
          properties:
            file:
              type: "object"
              properties:
                cropLeft:
                  type: "integer"
                cropTop:
                  type: "integer"
                cropBottom:
                  type: "integer"
                createTime:
                  type: "integer"
                imageUrl:
                  type: "string"
                width:
                  type: "integer"
                  minimum: 0.0
                cropRight:
                  type: "integer"
                updateTime:
                  type: "integer"
                thumbUrl:
                  type: "string"
                contentType:
                  type: "string"
                objectId:
                  type: "integer"
                  minimum: 0.0
                height:
                  type: "integer"
                  minimum: 0.0
            createTime:
              type: "integer"
            updateTime:
              type: "integer"
            descriptionText:
              type: "string"
            sort:
              type: "integer"
              minimum: 0.0
            title:
              type: "string"
            objectId:
              type: "integer"
              minimum: 0.0
